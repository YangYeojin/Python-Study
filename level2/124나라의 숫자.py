'''3진법 :
경우의 수 1 : 0=4, 1, 2
경우의 수 2 : 0=1, 1=2, 2=4
곱셈 X
제곱 계산!
81 27 9 3 1....


아마도
3^n일 때 444...와 같은 값 도출
3^n +1일 때 111..와 같은 값 도출

그렇다면 111... ~ 444... 사이의 값 계산은 어떻게?
가정:
3^n + 3^(n-1) + 3^(n-2) + ... + 3^2 + 3^1
과 같은 계산방식

==> if 3^(숫자M+1) > N > 3^(숫자M)일 때
	N은 3^(숫자M) * (0,1,2 中 1) + st(숫자M 이하의 수)

이 가정을 반복문으로 돌린다면?
작은 수부터? 큰 수부터?

> 작은 수부터 돌릴 경우
	Q. 언제 계산이 끝나는지 확인할 것인가
	Q. 계산이 너무 많아지지 않을 것인가
	Q. 3^m 이하의 수를 어떻게 뽑아내는가
	     A. 3^m으로 나누어지지 않는 나머지를 가져오면 될 듯
> 큰 수부터 돌릴 경우
	Q. 숫자 M을 어떻게 가장 적은 계산으로 구할 것인가?
	Q. 굳이 그렇게까지 해야 하는가?'''
'''def solution(n):
    answer = ''
    m = 3  # 제곱수
    while n != 0:
        this = n % m

        if this == 0:
            answer = '4' + answer
        elif this == 1:
            answer = '1' + answer
        else:
            answer = '2' + answer
        n = n - this ### 이 파트를 txt 파일 드래그 한 부분 고려해서 다시 작성하면?
        m *= 3  ### 이렇게 하면 안될 듯 ** 사용하는 방식으로 변경해보자
    return answer'''

### 몰라

def solution(n):
    if n <= 3:
        return '124'[n-1]
    else:
        q, r = divmod(n-1, 3)
        return solution(q) + '124'[r]

print(solution(5))
print(solution(11))
print(solution(17))